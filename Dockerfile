FROM nvcr.io/nvidia/pytorch:22.01-py3

# python packages

RUN pip install git+https://github.com/pgruening/dlbio
RUN apt update
RUN apt install libgl1-mesa-glx -y
RUN apt install libglib2.0-0 -y
RUN apt install tmux -y

WORKDIR /other_py_packages
RUN git clone https://github.com/cybertronai/pytorch-lamb.git
RUN pip install -e ./pytorch-lamb

RUN pip install torch==1.8.0+cu111 torchvision==0.9.0+cu111 -f https://download.pytorch.org/whl/torch_stable.html

# add convnext repo
WORKDIR /workingdir
RUN git clone https://github.com/pgruening/ConvNeXt.git
RUN pip install timm==0.3.2 tensorboardX six

#ssh key to connect to INB
COPY key.txt /root/.ssh/id_rsa
#ssh key to allow connection from INB to this container
COPY pub.txt /root/.ssh/authorized_keys

#install ssh server to enable connections from INB to this container
RUN apt-get update && apt-get install -y openssh-server
RUN mkdir /var/run/sshd

#whitelist sshgate for outgoing ssh connections
RUN ssh-keyscan -H sshgate.inb.uni-luebeck.de >> /root/.ssh/known_hosts

#store environment variables so they are restored on ssh sessions
RUN env > /etc/environment

#Sequence of commands:
#1. store environment variables including those defined in "docker run" (container specific, not image specific)
#2. mount nfshome from INB at /nfshome in the container
#3. create reverse tunnel to listen on sshgate for connections to the container
#4. start the ssh server in the container
# TODO: Change your username
CMD env > /etc/environment && ssh -R $SSHPORT:localhost:22 gruening@sshgate.inb.uni-luebeck.de -fN && /usr/sbin/sshd -D


#Prerequisites:
#1. pubkey corresponding to key.txt (e.g. ~/.ssh/id_rsa.pub generated by keygen) must be in INB's /nfshome/YOURUSER/.ssh/authorized_keys (so that the container can connect to the sshgate)
#2. private key corresponding to pub.txt must be in INB's /nfshome/YOURUSER/.ssh/id_rsa (so that user can connect to the container's ssh server through the reverse tunnel opened on the sshgate)

#How to run:
#run in privileged mode
#run in nvidia runtime
#mount a local static folder in /data
#run with env SSHPORT=30023 (port the container's ssh server will be available on on sshgate)

